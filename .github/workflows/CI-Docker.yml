name: CI - Test Source Code and Docker Image

on:
  push:
    branches: 
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  test-source-code:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        node-version: [16.x]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Cache Yarn Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.yarn/cache
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Yarn
      run: npm install -g yarn

    - name: Install Dependencies
      working-directory: ./api
      run: yarn

    - name: Seed Data
      working-directory: ./api
      run: yarn seed

    - name: Set up Environment Variables and Test
      working-directory: ./api
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: yarn test

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./api/test-results/

  build-docker-api:
    needs: test-source-code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker Image for API
        run: |
          docker build -f api/Dockerfile --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} -t ${{ secrets.DOCKER_USERNAME }}/foodadvisor_api_image:latest .

      - name: Push Docker Image for API to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/foodadvisor_api_image:latest

  build-docker-client:
    needs: test-source-code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker Image for Client
        run: |
          docker build -f client/Dockerfile --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} -t ${{ secrets.DOCKER_USERNAME }}/foodadvisor_client_image:latest .

      - name: Push Docker Image for Client to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/foodadvisor_client_image:latest

  test-docker-image-api:
    needs: build-docker-api
    runs-on: ubuntu-latest

    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Pull and Run Docker Image for API
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/foodadvisor_api_image:latest
          docker run -d --name test-container-api ${{ secrets.DOCKER_USERNAME }}/foodadvisor_api_image:latest

      - name: Run Automated Tests in API Docker Container
        run: docker exec test-container-api yarn test

      - name: Clean Up API Docker Container
        run: |
          docker stop test-container-api
          docker rm test-container-api

  test-docker-image-client:
    needs: build-docker-client
    runs-on: ubuntu-latest

    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Pull and Run Docker Image for Client
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/foodadvisor_client_image:latest
          docker run -d --name test-container-client ${{ secrets.DOCKER_USERNAME }}/foodadvisor_client_image:latest

      - name: Run Automated Tests in Client Docker Container
        run: docker exec test-container-client yarn test

      - name: Clean Up Client Docker Container
        run: |
          docker stop test-container-client
          docker rm test-container-client